spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url= jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
server.port = 8081
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka
spring.application.name = ORDER-SERVICE

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4j Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4j Timeout properties
#wait for 3 second
resilience4j.circuitbreaker.instances.inventory.timeout-duration=3s 

#Resilience4j Retry properties
#Retry after waiting the time defined above and retry 3 times with a period of waiting for 5s between each retry
resilience4j.retry.instances.inventory.max-attempt = 3
resilience4j.retry.instances.inventory.wait-duration=5s

#zipkin and sleuth configuration
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0

#Kafka properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic = notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#To serialize it as JSON
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#For the mapping of the objects which comes from the publisher to the consumer class in the package specified
spring.kafka.producer.properties.spring.json.type.mapping=event:com.andy.orderservice.event.OrderPlacedEvent
